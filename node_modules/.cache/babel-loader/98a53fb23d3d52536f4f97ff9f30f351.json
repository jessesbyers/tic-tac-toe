{"ast":null,"code":"var _jsxFileName = \"/Users/jessebyers/Development/code/ReactTicTacToe/react-tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[this.state.stepNumber];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, moves)));\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, props.value);\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }\n}), document.getElementById('root')); // import React, {Component} from 'react';\n// import ReactDOM from 'react-dom';\n// const style = {\n//   table: {\n//     borderCollapse: 'collapse'\n//   },\n//   tableCell: {\n//     border: '1px solid gray',\n//     margin: 0,\n//     padding: '5px 10px',\n//     width: 'max-content',\n//     minWidth: '150px'\n//   },\n//   form: {\n//     container: {\n//       padding: '20px',\n//       border: '1px solid #F0F8FF',\n//       borderRadius: '15px',\n//       width: 'max-content',\n//       marginBottom: '40px'\n//     },\n//     inputs: {\n//       marginBottom: '5px'\n//     },\n//     submitBtn: {\n//       marginTop: '10px',\n//       padding: '10px 15px',\n//       border:'none',\n//       backgroundColor: 'lightseagreen',\n//       fontSize: '14px',\n//       borderRadius: '5px'\n//     }\n//   }\n// }\n// class PhoneBookForm extends Component {\n//   state = {\n//     userFirstName: '',\n//     userLastName: '', \n//     userPhone: ''\n//   }\n//   handleChange = (e) => {\n//     e.preventDefault()\n//     this.setState({\n//       [e.target.name]: [e.target.value]\n//     })\n//   }\n//   handleSubmit = (e) => {\n//     e.preventDefault()\n//         // call function in Application component to add data to phoneBook\n//     this.props.addEntry(this.state)   \n//         this.setState({\n//             userFirstname: '',\n//             userLastname: '', \n//             userPhone: ''\n//         })\n//   }\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit.bind(this)} style={style.form.container}>\n//         <label>First name:</label>\n//         <br />\n//         <input \n//           style={style.form.inputs}\n//           className='userFirstname'\n//           name='userFirstname' \n//           type='text'\n//           placeholder='Coder'\n//           value={this.state.userFirstname}\n//           onChange={this.handleChange.bind(this)}\n//         />\n//         <br/>\n//         <label>Last name:</label>\n//         <br />\n//         <input \n//           style={style.form.inputs}\n//           className='userLastname'\n//           name='userLastname' \n//           type='text' \n//           placeholder='Byte'\n//           value={this.state.userLastname}\n//           onChange={this.handleChange.bind(this)}\n//         />\n//         <br />\n//         <label>Phone:</label>\n//         <br />\n//         <input\n//           style={style.form.inputs}\n//           className='userPhone' \n//           name='userPhone' \n//           type='text'\n//           placeholder='8885559999'\n//           value={this.state.userPhone}\n//           onChange={this.handleChange.bind(this)}\n//         />\n//         <br/>\n//         <input \n//           style={style.form.submitBtn} \n//           className='submitButton'\n//           type='submit' \n//           value='Add User' \n//         />\n//       </form>\n//     )\n//   }\n// }\n// function InformationTable(props) {\n//   return (\n//     <table style={style.table} className='informationTable'>\n//       <thead> \n//         <tr>\n//           <th style={style.tableCell}>First name</th>\n//           <th style={style.tableCell}>Last name</th>\n//           <th style={style.tableCell}>Phone</th>\n//         </tr>\n//       </thead> \n//       <tbody>\n//         {props.phoneBook.map(entry => {\n//             console.table(entry)\n//           return (\n//             <tr>\n//               <td style={style.tableCell}>{entry.userFirstname}</td>\n//               <td style={style.tableCell}>{entry.userLastname}</td>\n//               <td style={style.tableCell}>{entry.userPhone}</td>\n//             </tr>\n//           )\n//         })}\n//       </tbody>\n//     </table>\n//   );\n// }\n// class Application extends Component {\n//   state = {\n//     phoneBook: []\n//   }\n//   addEntry = (data) => {\n//     const added = this.state.phoneBook.concat(data)\n//     this.setState({ \n//       phoneBook: added\n//     })\n//   }\n//   render() {\n//     return (\n//       <section>\n//         <PhoneBookForm addEntry={this.addEntry}/>\n//         <InformationTable phoneBook={this.state.phoneBook}/>\n//       </section>\n//     );\n//   }\n// }\n// ReactDOM.render(\n//   <Application />,\n//   document.getElementById('root')\n// );","map":{"version":3,"sources":["/Users/jessebyers/Development/code/ReactTicTacToe/react-tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Game","Component","constructor","props","state","history","squares","Array","fill","stepNumber","xIsNext","jumpTo","step","setState","handleClick","i","slice","current","calculateWinner","concat","length","render","winner","moves","map","move","desc","status","Board","renderSquare","onClick","Square","value","lines","a","b","c","document","getElementById"],"mappings":"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":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n            squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n        }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[this.state.stepNumber];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }   \n\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext\n        })\n\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n            <Board \n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n            />\n            </div>\n            <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n            </div>\n        </div>\n        );\n    }\n}\n\n\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n      return (\n        <Square \n            value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n}\n  \n\n\n\n\n\n\nfunction Square(props) {\n\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\n\n\n\n\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n}\n  \n// ========================================\n  \nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import ReactDOM from 'react-dom';\n\n// const style = {\n//   table: {\n//     borderCollapse: 'collapse'\n//   },\n//   tableCell: {\n//     border: '1px solid gray',\n//     margin: 0,\n//     padding: '5px 10px',\n//     width: 'max-content',\n//     minWidth: '150px'\n//   },\n//   form: {\n//     container: {\n//       padding: '20px',\n//       border: '1px solid #F0F8FF',\n//       borderRadius: '15px',\n//       width: 'max-content',\n//       marginBottom: '40px'\n//     },\n//     inputs: {\n//       marginBottom: '5px'\n//     },\n//     submitBtn: {\n//       marginTop: '10px',\n//       padding: '10px 15px',\n//       border:'none',\n//       backgroundColor: 'lightseagreen',\n//       fontSize: '14px',\n//       borderRadius: '5px'\n//     }\n//   }\n// }\n\n// class PhoneBookForm extends Component {\n\n//   state = {\n//     userFirstName: '',\n//     userLastName: '', \n//     userPhone: ''\n//   }\n\n//   handleChange = (e) => {\n//     e.preventDefault()\n//     this.setState({\n//       [e.target.name]: [e.target.value]\n//     })\n//   }\n\n//   handleSubmit = (e) => {\n//     e.preventDefault()\n//         // call function in Application component to add data to phoneBook\n//     this.props.addEntry(this.state)   \n//         this.setState({\n//             userFirstname: '',\n//             userLastname: '', \n//             userPhone: ''\n//         })\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit.bind(this)} style={style.form.container}>\n//         <label>First name:</label>\n//         <br />\n//         <input \n//           style={style.form.inputs}\n//           className='userFirstname'\n//           name='userFirstname' \n//           type='text'\n//           placeholder='Coder'\n//           value={this.state.userFirstname}\n//           onChange={this.handleChange.bind(this)}\n//         />\n//         <br/>\n//         <label>Last name:</label>\n//         <br />\n//         <input \n//           style={style.form.inputs}\n//           className='userLastname'\n//           name='userLastname' \n//           type='text' \n//           placeholder='Byte'\n//           value={this.state.userLastname}\n//           onChange={this.handleChange.bind(this)}\n\n//         />\n//         <br />\n//         <label>Phone:</label>\n//         <br />\n//         <input\n//           style={style.form.inputs}\n//           className='userPhone' \n//           name='userPhone' \n//           type='text'\n//           placeholder='8885559999'\n//           value={this.state.userPhone}\n//           onChange={this.handleChange.bind(this)}\n//         />\n//         <br/>\n//         <input \n//           style={style.form.submitBtn} \n//           className='submitButton'\n//           type='submit' \n//           value='Add User' \n//         />\n//       </form>\n//     )\n//   }\n// }\n\n// function InformationTable(props) {\n//   return (\n//     <table style={style.table} className='informationTable'>\n//       <thead> \n//         <tr>\n//           <th style={style.tableCell}>First name</th>\n//           <th style={style.tableCell}>Last name</th>\n//           <th style={style.tableCell}>Phone</th>\n//         </tr>\n//       </thead> \n\n\n\n//       <tbody>\n//         {props.phoneBook.map(entry => {\n//             console.table(entry)\n//           return (\n//             <tr>\n//               <td style={style.tableCell}>{entry.userFirstname}</td>\n//               <td style={style.tableCell}>{entry.userLastname}</td>\n//               <td style={style.tableCell}>{entry.userPhone}</td>\n//             </tr>\n//           )\n//         })}\n//       </tbody>\n//     </table>\n//   );\n\n// }\n\n// class Application extends Component {\n//   state = {\n//     phoneBook: []\n//   }\n\n//   addEntry = (data) => {\n//     const added = this.state.phoneBook.concat(data)\n//     this.setState({ \n//       phoneBook: added\n//     })\n//   }\n\n//   render() {\n//     return (\n//       <section>\n//         <PhoneBookForm addEntry={this.addEntry}/>\n//         <InformationTable phoneBook={this.state.phoneBook}/>\n//       </section>\n//     );\n//   }\n// }\n\n// ReactDOM.render(\n//   <Application />,\n//   document.getElementById('root')\n// );\n\n\n\n  "]},"metadata":{},"sourceType":"module"}